<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jims.register.dao.OrgSelfServiceVsMenuDao">
    
	<sql id="orgSelfServiceVsMenuColumns">
		a.id AS "id",
		a.self_service_id AS "selfServiceId",
		a.sys_service_id AS "sysServiceId",
		a.menu_id AS "menuId",
		a.menu_sort AS "menuSort",
		a.pid AS "pid",
		a.menu_end_date AS "menuEndDate",
		a.create_by AS "createBy",
		a.remarks AS "remarks",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.create_date AS "createDate"
	</sql>
	
	<sql id="orgSelfServiceVsMenuJoins">
	</sql>
    
	<select id="get" resultType="OrgSelfServiceVsMenu">
		SELECT 
			<include refid="orgSelfServiceVsMenuColumns"/>
		FROM org_self_service_vs_menu a
		<include refid="orgSelfServiceVsMenuJoins"/>
		WHERE a.id = #{id}
	</select>

    <select id="findSelfServiceId" resultType="OrgSelfServiceVsMenu">
           select a.menu_id,a.menu_name,a.pid,nvl(r.id,sys_guid()) id,nvl(r.menu_operate,2) menuOperate,a.menu_sort
       from (select o.*,d.menu_name from  org_self_service_vs_menu o,menu_dict d
        where d.id=o.menu_id and o.self_service_id = #{0}) a ,
        (select *
           from org_role_vs_service
          where service_id = #{0}
          and role_id=#{1}
          ) r where a.menu_id = r.menu_id(+)
      order by a.menu_sort
    </select>

    <select id="findServiceId" resultType="OrgSelfServiceVsMenu">
        SELECT
        <include refid="orgSelfServiceVsMenuColumns"/>
        FROM org_self_service_vs_menu a
        <include refid="orgSelfServiceVsMenuJoins"/>
        WHERE a.self_service_id = #{selfServiceId}
    </select>

	<select id="findList" resultType="OrgSelfServiceVsMenu">
		SELECT 
			<include refid="orgSelfServiceVsMenuColumns"/>,m.menu_name as "menuName"
		FROM org_self_service_vs_menu a,menu_dict m
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
            and m.id = a.menu_id
            and (a.menu_end_date is null or a.menu_end_date > sysdate)
            <if test="selfServiceId != null and selfServiceId != ''">
                AND a.self_service_id = #{selfServiceId}
            </if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.self_service_id,a.menu_sort
			</otherwise>
		</choose>
	</select>

    <select id="findListNoJoin" resultType="OrgSelfServiceVsMenu">
        SELECT
        <include refid="orgSelfServiceVsMenuColumns"/>
        FROM org_self_service_vs_menu a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="selfServiceId != null and selfServiceId != ''">
                AND a.self_service_id = #{selfServiceId}
            </if>
            <if test="sysServiceId != null and sysServiceId != ''">
                AND a.sys_service_id = #{sysServiceId}
            </if>
            <if test="menuId != null and menuId != ''">
                AND a.menu_id = #{menuId}
            </if>
            <if test="pid != null and pid != ''">
                AND a.pid = #{pid}
            </if>
        </where> ORDER BY a.self_service_id,a.menu_sort
    </select>

    <select id="findMaxSort" resultType="integer">
        SELECT
        max(menu_sort)
        FROM org_self_service_vs_menu a
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="selfServiceId != null and selfServiceId != ''">
                AND a.self_service_id = #{selfServiceId}
            </if>
            <if test="sysServiceId != null and sysServiceId != ''">
                AND a.sys_service_id = #{sysServiceId}
            </if>
            <if test="pid != null and pid != ''">
                AND a.pid = #{pid}
            </if>
            <if test="pid == null or pid == ''">
                AND a.pid is null
            </if>
        </where>
    </select>
	
	<select id="findAllList" resultType="OrgSelfServiceVsMenu">
		SELECT 
			<include refid="orgSelfServiceVsMenuColumns"/>
		FROM org_self_service_vs_menu a
		<include refid="orgSelfServiceVsMenuJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO org_self_service_vs_menu(
			id,
			self_service_id,
			sys_service_id,
			menu_id,
			menu_sort,
			pid,
			menu_end_date,
			create_by,
			remarks,
			update_by,
			update_date,
			del_flag,
			create_date
		) VALUES (
			#{id},
			#{selfServiceId},
			#{sysServiceId},
			#{menuId},
			#{menuSort},
			#{pid},
			#{menuEndDate},
			#{createBy},
			#{remarks},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{createDate}
		)
	</insert>
	
	<update id="update">
		UPDATE org_self_service_vs_menu SET 	
			self_service_id = #{selfServiceId},
			sys_service_id = #{sysServiceId},
			menu_id = #{menuId},
			menu_sort = #{menuSort},
			pid = #{pid},
			menu_end_date = #{menuEndDate},
			create_by = #{createBy},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			create_date = #{createDate}
		WHERE id = #{id}
	</update>
	
	<delete id="delete">
		delete from org_self_service_vs_menu
		WHERE id = #{id}
	</delete>

    <delete id="deleteByServiceId">
        delete from org_self_service_vs_menu
        WHERE self_service_id = #{1}
    </delete>

    <delete id="deleteByMenuIdAndSysServiceId">
        delete from org_self_service_vs_menu
        WHERE sys_service_id = #{1}
        and menu_id = #{0}
    </delete>

	<select id="findSelfServiceVsButton" resultType="OrgSelfServiceVsMenu">
		select
		a.menu_id,
		a.menu_name,
		a.pid,nvl(r.id,sys_guid()) id,
		nvl(r.menu_operate,2) menuOperate,
		a.menu_sort
		from (
		select o.*, d.menu_name
		from  org_self_service_vs_menu o,menu_dict d
		where d.id=o.menu_id  and o.self_service_id = #{0}) a ,
		(select *
		from org_role_vs_service
		where service_id = #{0}
		and role_id=#{1}
		) r where a.menu_id = r.menu_id(+)
		order by a.menu_sort
	</select>


</mapper>