<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jims.fbd.hrm.evaluation.dao.MouldDao">
	<!--查询模板类型-->
	<select id="getType" resultType="Mould">
		select id as id,
		pname as pname,
		MOULD_TYPE as type
		from EVALUATION_MOULD t
		where t.MOULD_TYPE='1'
		order by CREATE_DATE desc
	</select>
	<!--查询模板-->
	<select id="getTemplet" resultType="Mould">
		select id as id,
		name as name,
		pid as pid,
		pname as pname,
		MOULD_TYPE as type
		from EVALUATION_MOULD t
		where t.pid=#{id}
		and MOULD_TYPE='2'
		order by CREATE_DATE desc
	</select>
	<!--查询模板标准-->
	<select id="findListByid" resultType="StandardVo">
		select
		a.EVALUATION_MODEL_ID as templetId,
		a.EVALUATION_PROJECT_CODE   as pcode,
		(select EVALUATION_STANDARD_NAME
		from EVALUATION_STANDARD s
		where  s.id = a.EVALUATION_STANDARD_CODE) as name,
		a.EVALUATION_STANDARD_CODE  as id,
		(select EVALUATION_PROJECT_NAME from EVALUATION_PROJECT t
		where t.ID=a.EVALUATION_PROJECT_CODE
		) as pname,
		a.EVALUATION_PROJECT_SCODE   as scode,
		(select EVALUATION_PROJECT_NAME from EVALUATION_PROJECT p
		where p.ID=a.EVALUATION_PROJECT_SCODE
		) as sname,
		(select SCORE
		from EVALUATION_STANDARD s
		where  s.id = a.EVALUATION_STANDARD_CODE)  as score,
		(select KPI
		from EVALUATION_STANDARD s
		where  s.id = a.EVALUATION_STANDARD_CODE)  as kpi,
		a.CREATE_DATE               as createDate,
		a.CREATE_BY                 as createBy,
		(select CREATE_ORG
		from EVALUATION_STANDARD s
		where  s.id = a.EVALUATION_STANDARD_CODE)  as orgId
		from EVALUATION_MODEL_STANDARD a
		where  a.EVALUATION_MODEL_ID=#{id}
		order by a.EVALUATION_PROJECT_CODE,a.EVALUATION_PROJECT_SCODE
	</select>
	<!--查询模板名称是否重复-->
	<select id="getName" resultType="Integer">
		select count(*)
		from EVALUATION_MOULD t
		where
		<if test="type!=null and type !='' and type=='1'.toString()">
			t.pname=#{pname}
		</if>
		<if test="type!=null and type !='' and type=='2'.toString()">
			t.name=#{name} and t.pid=#{pid}
		</if>
		<if test="id!=null and id !=''">
			and t.id!=#{id}
		</if>
	</select>
    <!--根据项目查询标准-->
    <select id="standardByProject" resultType="StandardVo">
        select a.ID                 as id,
        (select p.parent_id from evaluation_project p
        where p.id=a.EVALUATION_PROJECT_CODE) as pcode,
        a.EVALUATION_PROJECT_CODE   as scode,
        (select EVALUATION_PROJECT_NAME from evaluation_project b
        where b.id=((select p.parent_id from evaluation_project p
        where p.id=a.EVALUATION_PROJECT_CODE))) as pname,
        a.EVALUATION_STANDARD_NAME  as name,
        (select EVALUATION_PROJECT_NAME from EVALUATION_PROJECT t
        where t.create_org = #{orgId}
        and t.ID=a.EVALUATION_PROJECT_CODE
        ) as sname,
        a.SCORE                     as score,
        a.KPI     					as kpi,
        a.CREATE_DATE               as createDate,
        a.CREATE_BY                 as createBy,
        a.STATE                     as state,
        a.DEL_FLAG                  as delFlag,
        a.CREATE_ORG                as orgId,
        a.CREATE_DEPT               as depId,
        a.CREATE_ROLE				as roleId
        from EVALUATION_STANDARD a
        where a.create_org = #{orgId}  and del_flag='0'
        and a.state='1'
        and a.EVALUATION_PROJECT_CODE=#{pcode}
        and a.id not in (select t.evaluation_standard_code from EVALUATION_MODEL_STANDARD t where t.evaluation_model_id=#{templetId})
        order by a.CREATE_DATE desc
    </select>
	<insert id="insert" >
		INSERT INTO EVALUATION_MOULD(
		id,
		name,
		pid,
		pname,
		MOULD_TYPE,
		CREATE_BY,
		CREATE_DATE
		) VALUES (
		#{id},
		#{name},
		#{pid},
		#{pname},
		#{type},
		#{createBy},
		sysdate
		)
	</insert>
    <!--保存考评标准-->
    <insert id="saveStandard" parameterType="StandardVo">
        INSERT INTO EVALUATION_MODEL_STANDARD(
        ID,
        EVALUATION_MODEL_ID,
        EVALUATION_STANDARD_CODE,
        EVALUATION_STANDARD_NAME,
        EVALUATION_PROJECT_SCODE,
        EVALUATION_PROJECT_CODE,
        SCORE,
        CREATE_BY,
        CREATE_DATE,
        KPI,
        CREATE_ORG
        ) VALUES (
        #{StandardVo.id},
        #{StandardVo.templetId},
        #{StandardVo.code},
        #{StandardVo.name},
        #{StandardVo.scode},
        (select p.parent_id from evaluation_project p where p.id=#{StandardVo.scode}),
        #{StandardVo.score},
        #{StandardVo.createBy},
        sysdate,
        #{StandardVo.kpi},
        #{StandardVo.orgId}
        )
    </insert>

	<update id="update" >
		UPDATE EVALUATION_MOULD t SET
		<if test="type!=null and type !='' and type=='1'.toString()">
			t.pname=#{pname}
		</if>
		<if test="type!=null and type !='' and type=='2'.toString()">
			t.name=#{name}
		</if>
		where t.id=#{id}
	</update>

	<delete id="delete"  >
		delete EVALUATION_MOULD t
		where
		<if test="type!=null and type !='' and type=='1'.toString()">
			t.id=#{id} or t.pid=#{id}
		</if>
		<if test="type!=null and type !='' and type=='2'.toString()">
			t.id=#{id}
		</if>

	</delete>
	<delete id="delStandard" parameterType="Mould" >
		delete EVALUATION_MODEL_STANDARD t
		where t.EVALUATION_MODEL_ID in (select id from EVALUATION_MOULD m where m.pid=#{id})

	</delete>
	<delete id="delStandardById" parameterType="StandardVo" >
		delete EVALUATION_MODEL_STANDARD t
		where t.EVALUATION_MODEL_ID=#{templetId}
		and t.EVALUATION_STANDARD_CODE=#{code}

	</delete>

</mapper>